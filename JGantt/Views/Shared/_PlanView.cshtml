@model List<ItemPlan>

<div class="row" style="margin: 10px 5px 10px 5px;">
    <div class="col-md-1">
        &nbsp;
    </div>

    <div class="col-md-11">
        @foreach (var d in Enumerable.Range(0, 21))
        {
            <div style="display: block; border:1px solid grey; position:absolute; width: 50px; left: @(d*50)px; background: @((DateTime.Now.Date.AddDays(d).DayOfWeek == DayOfWeek.Saturday || DateTime.Now.Date.AddDays(d).DayOfWeek == DayOfWeek.Sunday) ? "darkgrey" : "lightgrey")">
                @DateTime.Now.Date.AddDays(d).ToString("dd/MM")
            </div>
        }
    </div>
</div>

@foreach (var item in Model.Select(p => p.PlannableItem).Distinct())
{
    <div class="row" style="margin: 10px 5px 10px 5px; height: @(Model.Where(p => p.PlannableItem == item).SelectMany(p=>p.Channels).Count() * 20)px">
        <div class="col-md-1" style="height: 100%; padding: 0px 5px 0px 5px;">
            <div style="background: @item.Colour; height: 100%; text-align:center; overflow:hidden;">
                @item.Name
            </div>
        </div>

        <div class="col-md-11">

            @*@(ItemPlan itemPlan = Model.FirstOrDefault(p => p.PlannableItem == item))*@
            
                @foreach (var channel in Model.FirstOrDefault(p => p.PlannableItem == item).Channels)
                {
                    @foreach (var personProject in channel.PersonProjects)
                    {
                        <div style="overflow: hidden; display: block; border: 1px solid black; position:absolute; height:20px; width: @(personProject.CalcWidth()); left: @(personProject.CalcLeftOffset()); top: @(channel.ChannelNumber * 20)px; background: @(personProject.GetOther(item).Colour)">
                            @personProject.GetOther(item).Name
                        </div>
                    }
                }
            
        </div>
    </div>
}
