@model PlanModel
@{
    ViewData["Title"] = "JGantt";
}

<div class="row" style="margin: 10px 5px 10px 5px;">
    <div class="col-md-1">
        &nbsp;
    </div>

    <div class="col-md-11">
        @foreach (var d in Enumerable.Range(0, 21))
        {
            <div style="display: block; border:1px solid grey; position:absolute; width: 50px; left: @(d*50)px; background: @((DateTime.Now.Date.AddDays(d).DayOfWeek == DayOfWeek.Saturday || DateTime.Now.Date.AddDays(d).DayOfWeek == DayOfWeek.Sunday) ? "darkgrey" : "lightgrey")">
                @DateTime.Now.Date.AddDays(d).ToString("dd/MM")
            </div>
        }
    </div>
</div>

@foreach (var person in Model.Plan.Select(p => p.Person).Distinct())
{
    <div class="row" style="margin: 5px">
        <div class="col-md-1">
            <strong>@person.Name</strong>
        </div>

        <div class="col-md-11" style="height: @(Model.PersonPlans.Where(p => p.PlannableItem == person).SelectMany(p=>p.Channels).Count() * 20)px">

            @foreach (var planItem in Model.PersonPlans.Where(p => p.PlannableItem == person))
            {
                @foreach (var channel in planItem.Channels)
                {
                    @foreach (var project in channel.PersonProjects)
                    {
                        <div style="overflow: hidden; display: block; border: 1px solid black; position:absolute; height:20px; width: @(project.CalcWidth()); left: @(project.CalcLeftOffset()); top: @(channel.ChannelNumber * 20)px; background: @(project.Project.Colour)">
                            @project.Project.Name
                        </div>
                    }
                }
            }
        </div>
    </div>
}

<hr />

@foreach (var project in Model.Plan.Select(p => p.Project).Distinct())
{
    <div class="row" style="margin: 5px">
        <div class="col-md-1">
            <strong>@project.Name</strong>
        </div>

        <div class="col-md-11" style="height: @(Model.ProjectPlans.Where(p => p.PlannableItem == project).SelectMany(p=>p.Channels).Count() * 20)px">

            @foreach (var planItem in Model.ProjectPlans.Where(p => p.PlannableItem == project))
            {
                @foreach (var channel in planItem.Channels)
                {
                    @foreach (var person in channel.PersonProjects)
                    {
                        <div style="overflow: hidden; display: block; border: 1px solid black; position:absolute; height:20px; width: @(person.CalcWidth()); left: @(person.CalcLeftOffset()); top: @(channel.ChannelNumber * 20)px; background: @(person.Person.Colour)">
                            @person.Person.Name
                        </div>
                    }
                }
            }
        </div>
    </div>
}

<hr />

<div class="row">
    <div class="col-md-12">
        <div style="color:red">@Model.JsonError</div>
    </div>
</div>

@using (Html.BeginForm("Index", "Home"))
{
    <div class="row">
        <div class="col-md-12">
            @Html.TextAreaFor(m => m.Json, new { style = "width: 100%; height: 500px; font-family: monospace; white-space: pre; overflow-wrap: normal; overflow-x: scroll;", spellcheck = "false" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-11 col-lg-offset-11">
            <input type="submit" value="Update" />
        </div>
    </div>
}
